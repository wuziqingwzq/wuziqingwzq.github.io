---
layout: post
title:  "markdown语法"
date:   2017-06-09 10:48:11 +0800
categories: other 
tags: jekyll code
---
如果要使用jekyll来搭建博客，那如何码字就是最关键的一点了，
jekyll支持markdown与textile两种格式。在我的博客中，大部分文档采用了Markdown来编写

***
# 文档不包括的部分
- 表格

***
# 简单语法规则

## 标题

在markdown中的标题是在文本的前面加上一个#,一级标题一个，二级标题两个，以此类推：

代码：
```
# 一级标题
## 二级标题
### 三级标题
#### 四级标题
##### 五级标题
###### 六级标题
####### 七级标题（无效了）
```
效果：
> # 一级标题
> ## 二级标题
> ### 三级标题
> #### 四级标题
> ##### 五级标题
> ###### 六级标题
> ####### 七级标题（无效了）

## 列表
在markdown中列表和html中类似，分为有序列表和无序列表
### 有序列表
有序列表是在文本前增加一个1.2.3.会出现以下效果：

代码：
```
1. 第一
2. 第二
3. 第三
```
效果：
> 1. 第一
> 2. 第二
> 3. 第三

值得注意的一点是文本前添加的1.2.3.不会影响排序比如说我添加成1.7.4.实际显示效果也是正常的1.2.3.

代码：
```
1. 第一
7. 第二
4. 第三
```
效果：
> 1. 第一
> 7. 第二
> 4. 第三

### 无序列表
无序列表的是在文本前添加一个-或者*（减号或者星号），代码和效果如下：
```
- 无序1
- 无序2
- 无序3
```

> - 无序1
> - 无序2
> - 无序3

## 引用
如果你想在加入一些引用，就像本文的例子一样，只需要添加左尖括号即可>,记得加一个空格:

代码：
```
> 被引用的文本
```
效果：
> 被引用的文本

## 图片与链接
如果要增加一个链接或者增加图片，则需要使用不同的语法：

注意：如果链接是网络地址，需要加http://或者https://

```
![]()  // ![图片名称](图片链接)
 []()  //  [链接名称](链接地址)
```
代码：
```
[百度](https://www.baidu.com)
![猫咪](/assets/pic/2017-06-09/cat.jpg)
```
效果：
> [百度](https://www.baidu.com)

> ![猫咪](/assets/pic/2017-06-09/cat.jpg)

还有一种引用方式叫做参考式，语法是在方括号后面再加一对方括号：
```
![]()  // ![图片名称][图片标识]
 []()  //  [链接名称][链接标识]
[百度][baidu]
![猫咪][cat]
```

然后在后面的任意地方定义你的标识，该定义的规范是方括号+冒号+空格+链接，效果也是完全一样。

```
[图片标识]: 链接
[链接标识]: 链接
   [baidu]: https://www.baidu.com
   [cat]: /assets/pic/2017-06-09/cat.jpg
```

## 粗体字
粗体字是前后使用两个*包含文本:
代码：
```
**粗体字显示**
```
效果：
> **粗体字显示**

## 斜体字
斜体字是前后使用一个*包含文本：
代码：
```
*斜体字显示*
```
效果：
> *斜体字显示*

## 分割线
分割线采用三个*星号来表示：
代码：
```
***
```
效果：
> ***

## 代码框
代码框是前后使用两个`包含文本，此时会类似与html中的行内元素，与其他元素在一起，不分行，称为行内代码。
代码：
```
``Object obj = new Object();``
```
效果：
``Object obj = new Object();``

有意思的是，如果第一行和最后一行采用三个`，中间放代码块，则会显示出块级元素的效果，另起一行，称为块级代码：

***
# 参考文档
相关参考的文档有：

[简书的教程](http://www.jianshu.com/p/1e402922ee32)

[markdown语法说明（简体中文版）](http://www.appinn.com/markdown/)